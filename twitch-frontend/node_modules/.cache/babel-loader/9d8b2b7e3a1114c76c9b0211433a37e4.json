{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'tabIndex'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n    OptionList = config.components.optionList,\n    convertChildrenToData = config.convertChildrenToData,\n    flattenOptions = config.flattenOptions,\n    getLabeledValue = config.getLabeledValue,\n    filterOptions = config.filterOptions,\n    isValueDisabled = config.isValueDisabled,\n    findValueOption = config.findValueOption,\n    warningProps = config.warningProps,\n    fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n    omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n    var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n      className = props.className,\n      id = props.id,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      options = props.options,\n      children = props.children,\n      mode = props.mode,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      labelInValue = props.labelInValue,\n      showSearch = props.showSearch,\n      inputValue = props.inputValue,\n      searchValue = props.searchValue,\n      filterOption = props.filterOption,\n      filterSort = props.filterSort,\n      _props$optionFilterPr = props.optionFilterProp,\n      optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      onSearch = props.onSearch,\n      allowClear = props.allowClear,\n      clearIcon = props.clearIcon,\n      showArrow = props.showArrow,\n      inputIcon = props.inputIcon,\n      menuItemSelectedIcon = props.menuItemSelectedIcon,\n      disabled = props.disabled,\n      loading = props.loading,\n      defaultActiveFirstOption = props.defaultActiveFirstOption,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      optionLabelProp = props.optionLabelProp,\n      backfill = props.backfill,\n      tabIndex = props.tabIndex,\n      getInputElement = props.getInputElement,\n      getPopupContainer = props.getPopupContainer,\n      _props$listHeight = props.listHeight,\n      listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n      _props$listItemHeight = props.listItemHeight,\n      listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      virtual = props.virtual,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      direction = props.direction,\n      tokenSeparators = props.tokenSeparators,\n      tagRender = props.tagRender,\n      onPopupScroll = props.onPopupScroll,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      onChange = props.onChange,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      onClear = props.onClear,\n      _props$internalProps = props.internalProps,\n      internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n      restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"tabIndex\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"onClear\", \"internalProps\"]);\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n    var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerId = _useState2[0],\n      setInnerId = _useState2[1];\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ======================== Mobile ========================\n\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mobile = _useState4[0],\n      setMobile = _useState4[1];\n    useEffect(function () {\n      // Only update on the client side\n      setMobile(isMobile());\n    }, []); // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      var _selectorRef$current, _selectorRef$current2, _listRef$current;\n      return {\n        focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n        blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n        scrollTo: (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n        value: value\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedValue = _useMergedState2[0],\n      setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n    var _useMemo = useMemo(function () {\n        return toInnerValue(mergedValue, {\n          labelInValue: mergedLabelInValue,\n          combobox: mode === 'combobox'\n        });\n      }, [mergedValue, mergedLabelInValue]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      mergedRawValue = _useMemo2[0],\n      mergedValueMap = _useMemo2[1];\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeValue = _useState6[0],\n      setActiveValue = _useState6[1];\n    var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      innerSearchValue = _useState8[0],\n      setInnerSearchValue = _useState8[1];\n    var mergedSearchValue = innerSearchValue;\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt[optionFilterProp] !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n      if (filterSort && Array.isArray(filteredOptions)) {\n        return _toConsumableArray(filteredOptions).sort(filterSort);\n      }\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch, filterSort]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n    var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      prevValueOptions = _useState10[0],\n      setPrevValueOptions = _useState10[1];\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValueMap: mergedValueMap,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n      setMergedValue(outValue);\n    };\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n        source = _ref.source;\n      if (disabled) {\n        return;\n      }\n      var newRawValue;\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n        defaultValue: defaultOpen,\n        value: open\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      innerOpen = _useMergedState4[0],\n      setInnerOpen = _useMergedState4[1];\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n      setInnerSearchValue(newSearchText);\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1]; // KeyDown\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which;\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (mode !== 'combobox') {\n          event.preventDefault();\n        } // We only manage open state here, close logic should handle by list component\n\n        if (!mergedOpen) {\n          onToggleOpen(true);\n        }\n      }\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n        (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n      }\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n      if (mergedOpen && listRef.current) {\n        var _listRef$current3;\n        (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n      }\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n    var focusRef = useRef(false);\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n      focusRef.current = true;\n    };\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n      if (disabled) {\n        return;\n      }\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n          cancelSetMockFocused();\n          if (!mobile && !popupElement.contains(document.activeElement)) {\n            var _selectorRef$current3;\n            (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n    var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      accessibilityIndex = _useState12[0],\n      setAccessibilityIndex = _useState12[1];\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref3$source = _ref3.source,\n        source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n      setAccessibilityIndex(index);\n      if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n    var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      containerWidth = _useState14[0],\n      setContainerWidth = _useState14[1];\n    var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      forceUpdate = _useState16[1]; // We need force update here since popup dom is render async\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = /*#__PURE__*/React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n      if (onClear) {\n        onClear();\n      }\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n    if (mergedShowArrow) {\n      arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), /*#__PURE__*/React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n  var RefSelect = /*#__PURE__*/React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","React","useState","useRef","useEffect","useMemo","KeyCode","isMobile","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","useCacheDisplayValue","useCacheOptions","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","value","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","filterSort","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","tabIndex","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","onClear","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","forEach","prop","containerRef","triggerRef","selectorRef","listRef","tokenWithEnter","some","tokenSeparator","includes","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_useState","_useState2","innerId","setInnerId","concat","mergedId","mergedOptionLabelProp","undefined","mergedLabelInValue","isMultiple","mergedShowSearch","_useState3","_useState4","mobile","setMobile","selectorDomRef","useImperativeHandle","_selectorRef$current","_selectorRef$current2","_listRef$current","focus","current","blur","scrollTo","_useMergedState","_useMergedState2","mergedValue","setMergedValue","_useMemo","combobox","_useMemo2","mergedRawValue","mergedValueMap","rawValues","Set","_useState5","_useState6","activeValue","setActiveValue","_useState7","_useState8","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","getValueOption","displayOptions","filteredOptions","every","opt","unshift","label","key","Array","isArray","sort","displayFlattenOptions","displayValues","tmpValues","map","val","valueOptions","displayValue","prevValueMap","length","triggerSelect","newValue","isSelect","source","newValueOption","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","_useState9","_useState10","prevValueOptions","setPrevValueOptions","triggerChange","newRawValues","skipTriggerChange","newRawValuesOptions","outValues","from","outValue","outOptions","option","index","clone","Object","defineProperty","get","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState3","_useMergedState4","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","filter","onSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","removeInfo","removedValue","values","_len","arguments","rest","_key","_listRef$current2","apply","onInternalKeyUp","_len2","_key2","_listRef$current3","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","splice","onInternalMouseDown","target","popupElement","contains","setTimeout","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_useState11","_useState12","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","_ref3$source","_useState13","_useState14","containerWidth","setContainerWidth","_useState15","_useState16","forceUpdate","onPopupMouseEnter","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","onMouseEnter","clearNode","onClearMouseDown","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"sources":["C:/Files/来offer/Twitch项目/twitch_code/Personalized-Twitch-Resources-Recommendation-Engine-main/twitch-frontend/node_modules/rc-select/es/generate.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'tabIndex'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        filterSort = props.filterSort,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        tabIndex = props.tabIndex,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        onClear = props.onClear,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"tabIndex\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"onClear\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        innerId = _useState2[0],\n        setInnerId = _useState2[1];\n\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ======================== Mobile ========================\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mobile = _useState4[0],\n        setMobile = _useState4[1];\n\n    useEffect(function () {\n      // Only update on the client side\n      setMobile(isMobile());\n    }, []); // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      var _selectorRef$current, _selectorRef$current2, _listRef$current;\n\n      return {\n        focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n        blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n        scrollTo: (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedValue = _useMergedState2[0],\n        setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n\n    var _useMemo = useMemo(function () {\n      return toInnerValue(mergedValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [mergedValue, mergedLabelInValue]),\n        _useMemo2 = _slicedToArray(_useMemo, 2),\n        mergedRawValue = _useMemo2[0],\n        mergedValueMap = _useMemo2[1];\n    /** We cache a set of raw values to speed up check */\n\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        activeValue = _useState6[0],\n        setActiveValue = _useState6[1];\n\n    var _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        innerSearchValue = _useState8[0],\n        setInnerSearchValue = _useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt[optionFilterProp] !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      if (filterSort && Array.isArray(filteredOptions)) {\n        return _toConsumableArray(filteredOptions).sort(filterSort);\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch, filterSort]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n\n    var _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        prevValueOptions = _useState10[0],\n        setPrevValueOptions = _useState10[1];\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValueMap: mergedValueMap,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setMergedValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        innerOpen = _useMergedState4[0],\n        setInnerOpen = _useMergedState4[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which;\n\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (mode !== 'combobox') {\n          event.preventDefault();\n        } // We only manage open state here, close logic should handle by list component\n\n\n        if (!mergedOpen) {\n          onToggleOpen(true);\n        }\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current3;\n\n        (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!mobile && !popupElement.contains(document.activeElement)) {\n            var _selectorRef$current3;\n\n            (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        accessibilityIndex = _useState12[0],\n        setAccessibilityIndex = _useState12[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$source = _ref3.source,\n          source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        containerWidth = _useState14[0],\n        setContainerWidth = _useState14[1];\n\n    var _useState15 = useState({}),\n        _useState16 = _slicedToArray(_useState15, 2),\n        forceUpdate = _useState16[1]; // We need force update here since popup dom is render async\n\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = /*#__PURE__*/React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      if (onClear) {\n        onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), /*#__PURE__*/React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = /*#__PURE__*/React.forwardRef(Select);\n  return RefSelect;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,wBAAwB,MAAM,oDAAoD;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC5D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,YAAY,EAAEC,aAAa,EAAEC,sBAAsB,EAAEC,OAAO,QAAQ,oBAAoB;AACjG,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,eAAe,MAAM,yBAAyB;AACrD,SAASC,mBAAmB,QAAQ,mBAAmB;AACvD,OAAOC,uBAAuB,MAAM,iCAAiC;AACrE,OAAOC,oBAAoB,MAAM,8BAA8B;AAC/D,OAAOC,eAAe,MAAM,yBAAyB;AACrD,IAAIC,kBAAkB,GAAG,CAAC,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,UAAU,CAAC;AACjL;AACA;AACA;AACA;;AAEA,eAAe,SAASC,gBAAgBA,CAACC,MAAM,EAAE;EAC/C,IAAIC,gBAAgB,GAAGD,MAAM,CAACE,SAAS;IACnCC,UAAU,GAAGH,MAAM,CAACI,UAAU,CAACC,UAAU;IACzCC,qBAAqB,GAAGN,MAAM,CAACM,qBAAqB;IACpDC,cAAc,GAAGP,MAAM,CAACO,cAAc;IACtCC,eAAe,GAAGR,MAAM,CAACQ,eAAe;IACxCC,aAAa,GAAGT,MAAM,CAACS,aAAa;IACpCC,eAAe,GAAGV,MAAM,CAACU,eAAe;IACxCC,eAAe,GAAGX,MAAM,CAACW,eAAe;IACxCC,YAAY,GAAGZ,MAAM,CAACY,YAAY;IAClCC,2BAA2B,GAAGb,MAAM,CAACa,2BAA2B;IAChEC,YAAY,GAAGd,MAAM,CAACc,YAAY,CAAC,CAAC;;EAExC,SAASC,MAAMA,CAACC,KAAK,EAAEC,GAAG,EAAE;IAC1B,IAAIC,YAAY;IAEhB,IAAIC,gBAAgB,GAAGH,KAAK,CAACd,SAAS;MAClCA,SAAS,GAAGiB,gBAAgB,KAAK,KAAK,CAAC,GAAGlB,gBAAgB,GAAGkB,gBAAgB;MAC7EC,SAAS,GAAGJ,KAAK,CAACI,SAAS;MAC3BC,EAAE,GAAGL,KAAK,CAACK,EAAE;MACbC,IAAI,GAAGN,KAAK,CAACM,IAAI;MACjBC,WAAW,GAAGP,KAAK,CAACO,WAAW;MAC/BC,OAAO,GAAGR,KAAK,CAACQ,OAAO;MACvBC,QAAQ,GAAGT,KAAK,CAACS,QAAQ;MACzBC,IAAI,GAAGV,KAAK,CAACU,IAAI;MACjBC,KAAK,GAAGX,KAAK,CAACW,KAAK;MACnBC,YAAY,GAAGZ,KAAK,CAACY,YAAY;MACjCC,YAAY,GAAGb,KAAK,CAACa,YAAY;MACjCC,UAAU,GAAGd,KAAK,CAACc,UAAU;MAC7BC,UAAU,GAAGf,KAAK,CAACe,UAAU;MAC7BC,WAAW,GAAGhB,KAAK,CAACgB,WAAW;MAC/BC,YAAY,GAAGjB,KAAK,CAACiB,YAAY;MACjCC,UAAU,GAAGlB,KAAK,CAACkB,UAAU;MAC7BC,qBAAqB,GAAGnB,KAAK,CAACoB,gBAAgB;MAC9CA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,qBAAqB;MACrFE,qBAAqB,GAAGrB,KAAK,CAACsB,oBAAoB;MAClDA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,qBAAqB;MACtFE,QAAQ,GAAGvB,KAAK,CAACuB,QAAQ;MACzBC,UAAU,GAAGxB,KAAK,CAACwB,UAAU;MAC7BC,SAAS,GAAGzB,KAAK,CAACyB,SAAS;MAC3BC,SAAS,GAAG1B,KAAK,CAAC0B,SAAS;MAC3BC,SAAS,GAAG3B,KAAK,CAAC2B,SAAS;MAC3BC,oBAAoB,GAAG5B,KAAK,CAAC4B,oBAAoB;MACjDC,QAAQ,GAAG7B,KAAK,CAAC6B,QAAQ;MACzBC,OAAO,GAAG9B,KAAK,CAAC8B,OAAO;MACvBC,wBAAwB,GAAG/B,KAAK,CAAC+B,wBAAwB;MACzDC,qBAAqB,GAAGhC,KAAK,CAACiC,eAAe;MAC7CA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,WAAW,GAAGA,qBAAqB;MACxFE,eAAe,GAAGlC,KAAK,CAACkC,eAAe;MACvCC,QAAQ,GAAGnC,KAAK,CAACmC,QAAQ;MACzBC,QAAQ,GAAGpC,KAAK,CAACoC,QAAQ;MACzBC,eAAe,GAAGrC,KAAK,CAACqC,eAAe;MACvCC,iBAAiB,GAAGtC,KAAK,CAACsC,iBAAiB;MAC3CC,iBAAiB,GAAGvC,KAAK,CAACwC,UAAU;MACpCA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGA,iBAAiB;MACnEE,qBAAqB,GAAGzC,KAAK,CAAC0C,cAAc;MAC5CA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;MAC9EE,SAAS,GAAG3C,KAAK,CAAC2C,SAAS;MAC3BC,cAAc,GAAG5C,KAAK,CAAC4C,cAAc;MACrCC,OAAO,GAAG7C,KAAK,CAAC6C,OAAO;MACvBC,aAAa,GAAG9C,KAAK,CAAC8C,aAAa;MACnCC,iBAAiB,GAAG/C,KAAK,CAAC+C,iBAAiB;MAC3CC,wBAAwB,GAAGhD,KAAK,CAACgD,wBAAwB;MACzDC,cAAc,GAAGjD,KAAK,CAACiD,cAAc;MACrCC,aAAa,GAAGlD,KAAK,CAACkD,aAAa;MACnCC,iBAAiB,GAAGnD,KAAK,CAACoD,UAAU;MACpCA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,iBAAiB;MAClEE,SAAS,GAAGrD,KAAK,CAACqD,SAAS;MAC3BC,eAAe,GAAGtD,KAAK,CAACsD,eAAe;MACvCC,SAAS,GAAGvD,KAAK,CAACuD,SAAS;MAC3BC,aAAa,GAAGxD,KAAK,CAACwD,aAAa;MACnCC,uBAAuB,GAAGzD,KAAK,CAACyD,uBAAuB;MACvDC,OAAO,GAAG1D,KAAK,CAAC0D,OAAO;MACvBC,MAAM,GAAG3D,KAAK,CAAC2D,MAAM;MACrBC,OAAO,GAAG5D,KAAK,CAAC4D,OAAO;MACvBC,SAAS,GAAG7D,KAAK,CAAC6D,SAAS;MAC3BC,WAAW,GAAG9D,KAAK,CAAC8D,WAAW;MAC/BC,QAAQ,GAAG/D,KAAK,CAAC+D,QAAQ;MACzBC,QAAQ,GAAGhE,KAAK,CAACgE,QAAQ;MACzBC,UAAU,GAAGjE,KAAK,CAACiE,UAAU;MAC7BC,OAAO,GAAGlE,KAAK,CAACkE,OAAO;MACvBC,oBAAoB,GAAGnE,KAAK,CAACoE,aAAa;MAC1CA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,oBAAoB;MAC3EE,SAAS,GAAGhH,wBAAwB,CAAC2C,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,sBAAsB,EAAE,UAAU,EAAE,SAAS,EAAE,0BAA0B,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,UAAU,EAAE,UAAU,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,YAAY,EAAE,gBAAgB,EAAE,WAAW,EAAE,gBAAgB,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,gBAAgB,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,WAAW,EAAE,eAAe,EAAE,yBAAyB,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;IAE36B,IAAIsE,gBAAgB,GAAGF,aAAa,CAACG,IAAI,KAAKtG,mBAAmB;IACjE,IAAIuG,QAAQ,GAAG1E,YAAY,GAAGA,YAAY,CAACuE,SAAS,CAAC,GAAGA,SAAS;IACjEvF,kBAAkB,CAAC2F,OAAO,CAAC,UAAUC,IAAI,EAAE;MACzC,OAAOF,QAAQ,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC;IACF,IAAIC,YAAY,GAAGnH,MAAM,CAAC,IAAI,CAAC;IAC/B,IAAIoH,UAAU,GAAGpH,MAAM,CAAC,IAAI,CAAC;IAC7B,IAAIqH,WAAW,GAAGrH,MAAM,CAAC,IAAI,CAAC;IAC9B,IAAIsH,OAAO,GAAGtH,MAAM,CAAC,IAAI,CAAC;IAC1B,IAAIuH,cAAc,GAAGrH,OAAO,CAAC,YAAY;MACvC,OAAO,CAAC4F,eAAe,IAAI,EAAE,EAAE0B,IAAI,CAAC,UAAUC,cAAc,EAAE;QAC5D,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACD,cAAc,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC3B,eAAe,CAAC,CAAC;IACrB;;IAEA,IAAI6B,cAAc,GAAG3G,aAAa,CAAC,CAAC;MAChC4G,eAAe,GAAGhI,cAAc,CAAC+H,cAAc,EAAE,CAAC,CAAC;MACnDE,WAAW,GAAGD,eAAe,CAAC,CAAC,CAAC;MAChCE,cAAc,GAAGF,eAAe,CAAC,CAAC,CAAC;MACnCG,oBAAoB,GAAGH,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;IAG/C,IAAII,SAAS,GAAGjI,QAAQ,CAAC,CAAC;MACtBkI,UAAU,GAAGrI,cAAc,CAACoI,SAAS,EAAE,CAAC,CAAC;MACzCE,OAAO,GAAGD,UAAU,CAAC,CAAC,CAAC;MACvBE,UAAU,GAAGF,UAAU,CAAC,CAAC,CAAC;IAE9BhI,SAAS,CAAC,YAAY;MACpBkI,UAAU,CAAC,YAAY,CAACC,MAAM,CAACvH,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC;IACN,IAAIwH,QAAQ,GAAGxF,EAAE,IAAIqF,OAAO,CAAC,CAAC;;IAE9B,IAAII,qBAAqB,GAAG5D,eAAe;IAE3C,IAAI4D,qBAAqB,KAAKC,SAAS,EAAE;MACvCD,qBAAqB,GAAGtF,OAAO,GAAG,OAAO,GAAG,UAAU;IACxD,CAAC,CAAC;;IAGF,IAAIwF,kBAAkB,GAAGtF,IAAI,KAAK,UAAU,GAAG,KAAK,GAAGG,YAAY;IACnE,IAAIoF,UAAU,GAAGvF,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,UAAU;IACvD,IAAIwF,gBAAgB,GAAGpF,UAAU,KAAKiF,SAAS,GAAGjF,UAAU,GAAGmF,UAAU,IAAIvF,IAAI,KAAK,UAAU,CAAC,CAAC;;IAElG,IAAIyF,UAAU,GAAG5I,QAAQ,CAAC,KAAK,CAAC;MAC5B6I,UAAU,GAAGhJ,cAAc,CAAC+I,UAAU,EAAE,CAAC,CAAC;MAC1CE,MAAM,GAAGD,UAAU,CAAC,CAAC,CAAC;MACtBE,SAAS,GAAGF,UAAU,CAAC,CAAC,CAAC;IAE7B3I,SAAS,CAAC,YAAY;MACpB;MACA6I,SAAS,CAAC1I,QAAQ,CAAC,CAAC,CAAC;IACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,IAAI2I,cAAc,GAAG/I,MAAM,CAAC,IAAI,CAAC;IACjCF,KAAK,CAACkJ,mBAAmB,CAACvG,GAAG,EAAE,YAAY;MACzC,IAAIwG,oBAAoB,EAAEC,qBAAqB,EAAEC,gBAAgB;MAEjE,OAAO;QACLC,KAAK,EAAE,CAACH,oBAAoB,GAAG5B,WAAW,CAACgC,OAAO,MAAM,IAAI,IAAIJ,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,oBAAoB,CAACG,KAAK;QACrIE,IAAI,EAAE,CAACJ,qBAAqB,GAAG7B,WAAW,CAACgC,OAAO,MAAM,IAAI,IAAIH,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACI,IAAI;QACtIC,QAAQ,EAAE,CAACJ,gBAAgB,GAAG7B,OAAO,CAAC+B,OAAO,MAAM,IAAI,IAAIF,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACI;MACrH,CAAC;IACH,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIC,eAAe,GAAGlJ,cAAc,CAAC8C,YAAY,EAAE;QACjDD,KAAK,EAAEA;MACT,CAAC,CAAC;MACEsG,gBAAgB,GAAG7J,cAAc,CAAC4J,eAAe,EAAE,CAAC,CAAC;MACrDE,WAAW,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MACjCE,cAAc,GAAGF,gBAAgB,CAAC,CAAC,CAAC;IACxC;;IAGA,IAAIG,QAAQ,GAAG1J,OAAO,CAAC,YAAY;QACjC,OAAOQ,YAAY,CAACgJ,WAAW,EAAE;UAC/BrG,YAAY,EAAEmF,kBAAkB;UAChCqB,QAAQ,EAAE3G,IAAI,KAAK;QACrB,CAAC,CAAC;MACJ,CAAC,EAAE,CAACwG,WAAW,EAAElB,kBAAkB,CAAC,CAAC;MACjCsB,SAAS,GAAGlK,cAAc,CAACgK,QAAQ,EAAE,CAAC,CAAC;MACvCG,cAAc,GAAGD,SAAS,CAAC,CAAC,CAAC;MAC7BE,cAAc,GAAGF,SAAS,CAAC,CAAC,CAAC;IACjC;;IAGA,IAAIG,SAAS,GAAG/J,OAAO,CAAC,YAAY;MAClC,OAAO,IAAIgK,GAAG,CAACH,cAAc,CAAC;IAChC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;;IAEA,IAAII,UAAU,GAAGpK,QAAQ,CAAC,IAAI,CAAC;MAC3BqK,UAAU,GAAGxK,cAAc,CAACuK,UAAU,EAAE,CAAC,CAAC;MAC1CE,WAAW,GAAGD,UAAU,CAAC,CAAC,CAAC;MAC3BE,cAAc,GAAGF,UAAU,CAAC,CAAC,CAAC;IAElC,IAAIG,UAAU,GAAGxK,QAAQ,CAAC,EAAE,CAAC;MACzByK,UAAU,GAAG5K,cAAc,CAAC2K,UAAU,EAAE,CAAC,CAAC;MAC1CE,gBAAgB,GAAGD,UAAU,CAAC,CAAC,CAAC;MAChCE,mBAAmB,GAAGF,UAAU,CAAC,CAAC,CAAC;IAEvC,IAAIG,iBAAiB,GAAGF,gBAAgB;IAExC,IAAIvH,IAAI,KAAK,UAAU,IAAIwG,WAAW,KAAKnB,SAAS,EAAE;MACpDoC,iBAAiB,GAAGjB,WAAW;IACjC,CAAC,MAAM,IAAIlG,WAAW,KAAK+E,SAAS,EAAE;MACpCoC,iBAAiB,GAAGnH,WAAW;IACjC,CAAC,MAAM,IAAID,UAAU,EAAE;MACrBoH,iBAAiB,GAAGpH,UAAU;IAChC;IAEA,IAAIqH,aAAa,GAAG1K,OAAO,CAAC,YAAY;MACtC,IAAI2K,UAAU,GAAG7H,OAAO;MAExB,IAAI6H,UAAU,KAAKtC,SAAS,EAAE;QAC5BsC,UAAU,GAAG/I,qBAAqB,CAACmB,QAAQ,CAAC;MAC9C;MACA;AACN;AACA;AACA;;MAGM,IAAIC,IAAI,KAAK,MAAM,IAAIb,2BAA2B,EAAE;QAClDwI,UAAU,GAAGxI,2BAA2B,CAACwI,UAAU,EAAEnB,WAAW,EAAEpB,qBAAqB,EAAEjF,YAAY,CAAC;MACxG;MAEA,OAAOwH,UAAU,IAAI,EAAE;IACzB,CAAC,EAAE,CAAC7H,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAEwG,WAAW,CAAC,CAAC;IAC1C,IAAIoB,oBAAoB,GAAG5K,OAAO,CAAC,YAAY;MAC7C,OAAO6B,cAAc,CAAC6I,aAAa,EAAEpI,KAAK,CAAC;IAC7C,CAAC,EAAE,CAACoI,aAAa,CAAC,CAAC;IACnB,IAAIG,cAAc,GAAG1J,eAAe,CAACyJ,oBAAoB,CAAC,CAAC,CAAC;;IAE5D,IAAIE,cAAc,GAAG9K,OAAO,CAAC,YAAY;MACvC,IAAI,CAACyK,iBAAiB,IAAI,CAACjC,gBAAgB,EAAE;QAC3C,OAAO/I,kBAAkB,CAACiL,aAAa,CAAC;MAC1C;MAEA,IAAIK,eAAe,GAAGhJ,aAAa,CAAC0I,iBAAiB,EAAEC,aAAa,EAAE;QACpEhH,gBAAgB,EAAEA,gBAAgB;QAClCH,YAAY,EAAEP,IAAI,KAAK,UAAU,IAAIO,YAAY,KAAK8E,SAAS,GAAG,YAAY;UAC5E,OAAO,IAAI;QACb,CAAC,GAAG9E;MACN,CAAC,CAAC;MAEF,IAAIP,IAAI,KAAK,MAAM,IAAI+H,eAAe,CAACC,KAAK,CAAC,UAAUC,GAAG,EAAE;QAC1D,OAAOA,GAAG,CAACvH,gBAAgB,CAAC,KAAK+G,iBAAiB;MACpD,CAAC,CAAC,EAAE;QACFM,eAAe,CAACG,OAAO,CAAC;UACtBjI,KAAK,EAAEwH,iBAAiB;UACxBU,KAAK,EAAEV,iBAAiB;UACxBW,GAAG,EAAE;QACP,CAAC,CAAC;MACJ;MAEA,IAAI5H,UAAU,IAAI6H,KAAK,CAACC,OAAO,CAACP,eAAe,CAAC,EAAE;QAChD,OAAOtL,kBAAkB,CAACsL,eAAe,CAAC,CAACQ,IAAI,CAAC/H,UAAU,CAAC;MAC7D;MAEA,OAAOuH,eAAe;IACxB,CAAC,EAAE,CAACL,aAAa,EAAED,iBAAiB,EAAEzH,IAAI,EAAEwF,gBAAgB,EAAEhF,UAAU,CAAC,CAAC;IAC1E,IAAIgI,qBAAqB,GAAGxL,OAAO,CAAC,YAAY;MAC9C,OAAO6B,cAAc,CAACiJ,cAAc,EAAExI,KAAK,CAAC;IAC9C,CAAC,EAAE,CAACwI,cAAc,CAAC,CAAC;IACpB/K,SAAS,CAAC,YAAY;MACpB,IAAIqH,OAAO,CAAC+B,OAAO,IAAI/B,OAAO,CAAC+B,OAAO,CAACE,QAAQ,EAAE;QAC/CjC,OAAO,CAAC+B,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC7B;IACF,CAAC,EAAE,CAACoB,iBAAiB,CAAC,CAAC,CAAC,CAAC;;IAEzB,IAAIgB,aAAa,GAAGzL,OAAO,CAAC,YAAY;MACtC,IAAI0L,SAAS,GAAG7B,cAAc,CAAC8B,GAAG,CAAC,UAAUC,GAAG,EAAE;QAChD,IAAIC,YAAY,GAAGhB,cAAc,CAAC,CAACe,GAAG,CAAC,CAAC;QACxC,IAAIE,YAAY,GAAGhK,eAAe,CAAC8J,GAAG,EAAE;UACtC9I,OAAO,EAAE+I,YAAY;UACrBE,YAAY,EAAEjC,cAAc;UAC5B3G,YAAY,EAAEmF,kBAAkB;UAChC9D,eAAe,EAAE4D;QACnB,CAAC,CAAC;QACF,OAAO5I,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEsM,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE;UACxD3H,QAAQ,EAAEnC,eAAe,CAAC4J,GAAG,EAAEC,YAAY;QAC7C,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,IAAI,CAAC7I,IAAI,IAAI0I,SAAS,CAACM,MAAM,KAAK,CAAC,IAAIN,SAAS,CAAC,CAAC,CAAC,CAACzI,KAAK,KAAK,IAAI,IAAIyI,SAAS,CAAC,CAAC,CAAC,CAACP,KAAK,KAAK,IAAI,EAAE;QACjG,OAAO,EAAE;MACX;MAEA,OAAOO,SAAS;IAClB,CAAC,EAAE,CAAClC,WAAW,EAAEkB,aAAa,EAAE1H,IAAI,CAAC,CAAC,CAAC,CAAC;;IAExCyI,aAAa,GAAGvK,oBAAoB,CAACuK,aAAa,CAAC;IAEnD,IAAIQ,aAAa,GAAG,SAASA,aAAaA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MACrE,IAAIC,cAAc,GAAGxB,cAAc,CAAC,CAACqB,QAAQ,CAAC,CAAC;MAC/C,IAAII,SAAS,GAAGrK,eAAe,CAAC,CAACiK,QAAQ,CAAC,EAAEG,cAAc,CAAC,CAAC,CAAC,CAAC;MAE9D,IAAI,CAAC3F,aAAa,CAAC6F,iBAAiB,EAAE;QACpC;QACA,IAAIC,WAAW,GAAGlE,kBAAkB,GAAGxG,eAAe,CAACoK,QAAQ,EAAE;UAC/DpJ,OAAO,EAAEuJ,cAAc;UACvBN,YAAY,EAAEjC,cAAc;UAC5B3G,YAAY,EAAEmF,kBAAkB;UAChC9D,eAAe,EAAE4D;QACnB,CAAC,CAAC,GAAG8D,QAAQ;QAEb,IAAIC,QAAQ,IAAI7F,QAAQ,EAAE;UACxBA,QAAQ,CAACkG,WAAW,EAAEF,SAAS,CAAC;QAClC,CAAC,MAAM,IAAI,CAACH,QAAQ,IAAI5F,UAAU,EAAE;UAClCA,UAAU,CAACiG,WAAW,EAAEF,SAAS,CAAC;QACpC;MACF,CAAC,CAAC;;MAGF,IAAI1F,gBAAgB,EAAE;QACpB,IAAIuF,QAAQ,IAAIzF,aAAa,CAAC+F,WAAW,EAAE;UACzC/F,aAAa,CAAC+F,WAAW,CAACP,QAAQ,EAAEI,SAAS,EAAEF,MAAM,CAAC;QACxD,CAAC,MAAM,IAAI,CAACD,QAAQ,IAAIzF,aAAa,CAACgG,aAAa,EAAE;UACnDhG,aAAa,CAACgG,aAAa,CAACR,QAAQ,EAAEI,SAAS,EAAEF,MAAM,CAAC;QAC1D;MACF;IACF,CAAC,CAAC,CAAC;;IAGH,IAAIO,UAAU,GAAG9M,QAAQ,CAAC,EAAE,CAAC;MACzB+M,WAAW,GAAGlN,cAAc,CAACiN,UAAU,EAAE,CAAC,CAAC;MAC3CE,gBAAgB,GAAGD,WAAW,CAAC,CAAC,CAAC;MACjCE,mBAAmB,GAAGF,WAAW,CAAC,CAAC,CAAC;IAExC,IAAIG,aAAa,GAAG,SAASA,aAAaA,CAACC,YAAY,EAAE;MACvD,IAAIpG,gBAAgB,IAAIF,aAAa,CAACuG,iBAAiB,EAAE;QACvD;MACF;MAEA,IAAIC,mBAAmB,GAAGrC,cAAc,CAACmC,YAAY,CAAC;MACtD,IAAIG,SAAS,GAAG1M,aAAa,CAAC4K,KAAK,CAAC+B,IAAI,CAACJ,YAAY,CAAC,EAAE;QACtD7J,YAAY,EAAEmF,kBAAkB;QAChCxF,OAAO,EAAEoK,mBAAmB;QAC5BpL,eAAe,EAAEA,eAAe;QAChCiK,YAAY,EAAEjC,cAAc;QAC5BtF,eAAe,EAAE4D;MACnB,CAAC,CAAC;MACF,IAAIiF,QAAQ,GAAG9E,UAAU,GAAG4E,SAAS,GAAGA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEtD,IAAI9G,QAAQ,KAAKwD,cAAc,CAACmC,MAAM,KAAK,CAAC,IAAImB,SAAS,CAACnB,MAAM,KAAK,CAAC,CAAC,EAAE;QACvE,IAAIsB,UAAU,GAAGrL,eAAe,CAAC+K,YAAY,EAAEE,mBAAmB,EAAE;UAClEL,gBAAgB,EAAEA;QACpB,CAAC,CAAC,CAAC,CAAC;;QAEJC,mBAAmB,CAACQ,UAAU,CAAC3B,GAAG,CAAC,UAAU4B,MAAM,EAAEC,KAAK,EAAE;UAC1D,IAAIC,KAAK,GAAGjO,aAAa,CAAC,CAAC,CAAC,EAAE+N,MAAM,CAAC;UAErCG,MAAM,CAACC,cAAc,CAACF,KAAK,EAAE,yBAAyB,EAAE;YACtDG,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB,OAAOZ,YAAY,CAACQ,KAAK,CAAC;YAC5B;UACF,CAAC,CAAC;UACF,OAAOC,KAAK;QACd,CAAC,CAAC,CAAC;QACHpH,QAAQ,CAACgH,QAAQ,EAAE9E,UAAU,GAAG+E,UAAU,GAAGA,UAAU,CAAC,CAAC,CAAC,CAAC;MAC7D;MAEA7D,cAAc,CAAC4D,QAAQ,CAAC;IAC1B,CAAC;IAED,IAAIQ,gBAAgB,GAAG,SAASA,gBAAgBA,CAAC3B,QAAQ,EAAE4B,IAAI,EAAE;MAC/D,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;QACxB3B,MAAM,GAAG0B,IAAI,CAAC1B,MAAM;MAExB,IAAIjI,QAAQ,EAAE;QACZ;MACF;MAEA,IAAI6J,WAAW;MAEf,IAAIzF,UAAU,EAAE;QACdyF,WAAW,GAAG,IAAIhE,GAAG,CAACH,cAAc,CAAC;QAErC,IAAIkE,QAAQ,EAAE;UACZC,WAAW,CAACC,GAAG,CAAC/B,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACL8B,WAAW,CAACE,MAAM,CAAChC,QAAQ,CAAC;QAC9B;MACF,CAAC,MAAM;QACL8B,WAAW,GAAG,IAAIhE,GAAG,CAAC,CAAC;QACvBgE,WAAW,CAACC,GAAG,CAAC/B,QAAQ,CAAC;MAC3B,CAAC,CAAC;;MAGF,IAAI3D,UAAU,IAAI,CAACA,UAAU,IAAI8C,KAAK,CAAC+B,IAAI,CAACvD,cAAc,CAAC,CAAC,CAAC,CAAC,KAAKqC,QAAQ,EAAE;QAC3Ea,aAAa,CAAC1B,KAAK,CAAC+B,IAAI,CAACY,WAAW,CAAC,CAAC;MACxC,CAAC,CAAC;;MAGF/B,aAAa,CAACC,QAAQ,EAAE,CAAC3D,UAAU,IAAIwF,QAAQ,EAAE3B,MAAM,CAAC,CAAC,CAAC;;MAE1D,IAAIpJ,IAAI,KAAK,UAAU,EAAE;QACvBwH,mBAAmB,CAAC2D,MAAM,CAACjC,QAAQ,CAAC,CAAC;QACrC9B,cAAc,CAAC,EAAE,CAAC;MACpB,CAAC,MAAM,IAAI,CAAC7B,UAAU,IAAI3E,oBAAoB,EAAE;QAC9C4G,mBAAmB,CAAC,EAAE,CAAC;QACvBJ,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC;IAED,IAAIgE,sBAAsB,GAAG,SAASA,sBAAsBA,CAAClC,QAAQ,EAAEmC,IAAI,EAAE;MAC3ER,gBAAgB,CAAC3B,QAAQ,EAAE1M,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE6O,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;QACpEjC,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAIkC,yBAAyB,GAAG,SAASA,yBAAyBA,CAACpC,QAAQ,EAAEmC,IAAI,EAAE;MACjFR,gBAAgB,CAAC3B,QAAQ,EAAE1M,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE6O,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;QACpEjC,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH;;IAGA,IAAImC,qBAAqB,GAAGvL,IAAI,KAAK,UAAU,IAAI2B,eAAe,IAAIA,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;;IAEjG,IAAI6J,gBAAgB,GAAGpO,cAAc,CAACiI,SAAS,EAAE;QAC/CnF,YAAY,EAAEL,WAAW;QACzBI,KAAK,EAAEL;MACT,CAAC,CAAC;MACE6L,gBAAgB,GAAG/O,cAAc,CAAC8O,gBAAgB,EAAE,CAAC,CAAC;MACtDE,SAAS,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MAC/BE,YAAY,GAAGF,gBAAgB,CAAC,CAAC,CAAC;IAEtC,IAAIG,UAAU,GAAGF,SAAS,CAAC,CAAC;;IAE5B,IAAIG,gBAAgB,GAAG,CAACtK,eAAe,IAAI,CAACuG,cAAc,CAACkB,MAAM;IAEjE,IAAI7H,QAAQ,IAAI0K,gBAAgB,IAAID,UAAU,IAAI5L,IAAI,KAAK,UAAU,EAAE;MACrE4L,UAAU,GAAG,KAAK;IACpB;IAEA,IAAIE,WAAW,GAAGD,gBAAgB,GAAG,KAAK,GAAGD,UAAU;IAEvD,IAAIG,YAAY,GAAG,SAASA,YAAYA,CAACC,OAAO,EAAE;MAChD,IAAIC,QAAQ,GAAGD,OAAO,KAAK3G,SAAS,GAAG2G,OAAO,GAAG,CAACJ,UAAU;MAE5D,IAAIF,SAAS,KAAKO,QAAQ,IAAI,CAAC9K,QAAQ,EAAE;QACvCwK,YAAY,CAACM,QAAQ,CAAC;QAEtB,IAAIlJ,uBAAuB,EAAE;UAC3BA,uBAAuB,CAACkJ,QAAQ,CAAC;QACnC;MACF;IACF,CAAC;IAEDhO,uBAAuB,CAAC,CAACgG,YAAY,CAACkC,OAAO,EAAEjC,UAAU,CAACiC,OAAO,IAAIjC,UAAU,CAACiC,OAAO,CAAC+F,eAAe,CAAC,CAAC,CAAC,EAAEJ,WAAW,EAAEC,YAAY,CAAC,CAAC,CAAC;;IAExI,IAAII,aAAa,GAAG,SAASA,aAAaA,CAACC,UAAU,EAAEC,UAAU,EAAEC,aAAa,EAAE;MAChF,IAAIC,GAAG,GAAG,IAAI;MACd,IAAIC,aAAa,GAAGJ,UAAU;MAC9BhF,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEtB,IAAIqF,WAAW,GAAGH,aAAa,GAAG,IAAI,GAAGtO,mBAAmB,CAACoO,UAAU,EAAExJ,eAAe,CAAC;MACzF,IAAI8J,cAAc,GAAGD,WAAW;MAEhC,IAAIzM,IAAI,KAAK,UAAU,EAAE;QACvB;QACA,IAAIqM,UAAU,EAAE;UACdtC,aAAa,CAAC,CAACyC,aAAa,CAAC,CAAC;QAChC;MACF,CAAC,MAAM,IAAIC,WAAW,EAAE;QACtBD,aAAa,GAAG,EAAE;QAElB,IAAIxM,IAAI,KAAK,MAAM,EAAE;UACnB0M,cAAc,GAAGD,WAAW,CAAC9D,GAAG,CAAC,UAAUR,KAAK,EAAE;YAChD,IAAIwE,IAAI,GAAG/E,oBAAoB,CAACgF,IAAI,CAAC,UAAUC,KAAK,EAAE;cACpD,IAAIC,IAAI,GAAGD,KAAK,CAACC,IAAI;cACrB,OAAOA,IAAI,CAAC1H,qBAAqB,CAAC,KAAK+C,KAAK;YAC9C,CAAC,CAAC;YACF,OAAOwE,IAAI,GAAGA,IAAI,CAACG,IAAI,CAAC7M,KAAK,GAAG,IAAI;UACtC,CAAC,CAAC,CAAC8M,MAAM,CAAC,UAAUnE,GAAG,EAAE;YACvB,OAAOA,GAAG,KAAK,IAAI;UACrB,CAAC,CAAC;QACJ;QAEA,IAAIoB,YAAY,GAAG3B,KAAK,CAAC+B,IAAI,CAAC,IAAIpD,GAAG,CAAC,EAAE,CAAC9B,MAAM,CAACzI,kBAAkB,CAACoK,cAAc,CAAC,EAAEpK,kBAAkB,CAACiQ,cAAc,CAAC,CAAC,CAAC,CAAC;QACzH3C,aAAa,CAACC,YAAY,CAAC;QAC3BA,YAAY,CAACjG,OAAO,CAAC,UAAUiH,WAAW,EAAE;UAC1C/B,aAAa,CAAC+B,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;;QAEJe,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;;QAErBQ,GAAG,GAAG,KAAK;MACb;MAEA/E,mBAAmB,CAACgF,aAAa,CAAC;MAElC,IAAI3L,QAAQ,IAAI4G,iBAAiB,KAAK+E,aAAa,EAAE;QACnD3L,QAAQ,CAAC2L,aAAa,CAAC;MACzB;MAEA,OAAOD,GAAG;IACZ,CAAC,CAAC,CAAC;IACH;IACA;;IAGA,IAAIS,cAAc,GAAG,SAASA,cAAcA,CAACZ,UAAU,EAAE;MACvD;MACA,IAAI,CAACA,UAAU,IAAI,CAACA,UAAU,CAACa,IAAI,CAAC,CAAC,EAAE;QACrC;MACF;MAEA,IAAIjD,YAAY,GAAG3B,KAAK,CAAC+B,IAAI,CAAC,IAAIpD,GAAG,CAAC,EAAE,CAAC9B,MAAM,CAACzI,kBAAkB,CAACoK,cAAc,CAAC,EAAE,CAACuF,UAAU,CAAC,CAAC,CAAC,CAAC;MACnGrC,aAAa,CAACC,YAAY,CAAC;MAC3BA,YAAY,CAACjG,OAAO,CAAC,UAAUiH,WAAW,EAAE;QAC1C/B,aAAa,CAAC+B,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC;MAC3C,CAAC,CAAC;MACFxD,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;;IAGHzK,SAAS,CAAC,YAAY;MACpB,IAAI2O,SAAS,IAAI,CAAC,CAACvK,QAAQ,EAAE;QAC3BwK,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,EAAE,CAACxK,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEhBpE,SAAS,CAAC,YAAY;MACpB,IAAI,CAAC6O,UAAU,IAAI,CAACrG,UAAU,IAAIvF,IAAI,KAAK,UAAU,EAAE;QACrDmM,aAAa,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;MACjC;IACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC,CAAC,CAAC;;IAElB;AACJ;AACA;AACA;AACA;AACA;;IAEI,IAAIsB,QAAQ,GAAGrP,OAAO,CAAC,CAAC;MACpBsP,SAAS,GAAGzQ,cAAc,CAACwQ,QAAQ,EAAE,CAAC,CAAC;MACvCE,YAAY,GAAGD,SAAS,CAAC,CAAC,CAAC;MAC3BE,YAAY,GAAGF,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;IAGjC,IAAIG,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,KAAK,EAAE;MACxD,IAAIC,SAAS,GAAGJ,YAAY,CAAC,CAAC;MAC9B,IAAIK,KAAK,GAAGF,KAAK,CAACE,KAAK;MAEvB,IAAIA,KAAK,KAAKxQ,OAAO,CAACyQ,KAAK,EAAE;QAC3B;QACA,IAAI1N,IAAI,KAAK,UAAU,EAAE;UACvBuN,KAAK,CAACI,cAAc,CAAC,CAAC;QACxB,CAAC,CAAC;;QAGF,IAAI,CAAC/B,UAAU,EAAE;UACfG,YAAY,CAAC,IAAI,CAAC;QACpB;MACF;MAEAsB,YAAY,CAAC,CAAC,CAAC5F,iBAAiB,CAAC,CAAC,CAAC;;MAEnC,IAAIgG,KAAK,KAAKxQ,OAAO,CAAC2Q,SAAS,IAAI,CAACJ,SAAS,IAAIjI,UAAU,IAAI,CAACkC,iBAAiB,IAAIZ,cAAc,CAACmC,MAAM,EAAE;QAC1G,IAAI6E,UAAU,GAAGnQ,sBAAsB,CAAC+K,aAAa,EAAE5B,cAAc,CAAC;QAEtE,IAAIgH,UAAU,CAACC,YAAY,KAAK,IAAI,EAAE;UACpC/D,aAAa,CAAC8D,UAAU,CAACE,MAAM,CAAC;UAChC9E,aAAa,CAAC4E,UAAU,CAACC,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC;QACxD;MACF;MAEA,KAAK,IAAIE,IAAI,GAAGC,SAAS,CAACjF,MAAM,EAAEkF,IAAI,GAAG,IAAI7F,KAAK,CAAC2F,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;QAC1GD,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC;MAClC;MAEA,IAAIvC,UAAU,IAAIxH,OAAO,CAAC+B,OAAO,EAAE;QACjC,IAAIiI,iBAAiB;QAErB,CAACA,iBAAiB,GAAGhK,OAAO,CAAC+B,OAAO,EAAEhD,SAAS,CAACkL,KAAK,CAACD,iBAAiB,EAAE,CAACb,KAAK,CAAC,CAACrI,MAAM,CAACgJ,IAAI,CAAC,CAAC;MAChG;MAEA,IAAI/K,SAAS,EAAE;QACbA,SAAS,CAACkL,KAAK,CAAC,KAAK,CAAC,EAAE,CAACd,KAAK,CAAC,CAACrI,MAAM,CAACgJ,IAAI,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC,CAAC;;IAGH,IAAII,eAAe,GAAG,SAASA,eAAeA,CAACf,KAAK,EAAE;MACpD,KAAK,IAAIgB,KAAK,GAAGN,SAAS,CAACjF,MAAM,EAAEkF,IAAI,GAAG,IAAI7F,KAAK,CAACkG,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;QACjHN,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC,GAAGP,SAAS,CAACO,KAAK,CAAC;MACpC;MAEA,IAAI5C,UAAU,IAAIxH,OAAO,CAAC+B,OAAO,EAAE;QACjC,IAAIsI,iBAAiB;QAErB,CAACA,iBAAiB,GAAGrK,OAAO,CAAC+B,OAAO,EAAEjD,OAAO,CAACmL,KAAK,CAACI,iBAAiB,EAAE,CAAClB,KAAK,CAAC,CAACrI,MAAM,CAACgJ,IAAI,CAAC,CAAC;MAC9F;MAEA,IAAIhL,OAAO,EAAE;QACXA,OAAO,CAACmL,KAAK,CAAC,KAAK,CAAC,EAAE,CAACd,KAAK,CAAC,CAACrI,MAAM,CAACgJ,IAAI,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC,CAAC;;IAEH;;IAGA,IAAIQ,QAAQ,GAAG5R,MAAM,CAAC,KAAK,CAAC;IAE5B,IAAI6R,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;MACjD/J,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAI,CAACzD,QAAQ,EAAE;QACb,IAAI6B,OAAO,IAAI,CAAC0L,QAAQ,CAACvI,OAAO,EAAE;UAChCnD,OAAO,CAACqL,KAAK,CAAC,KAAK,CAAC,EAAEJ,SAAS,CAAC;QAClC,CAAC,CAAC;;QAGF,IAAIvL,UAAU,CAAC8B,QAAQ,CAAC,OAAO,CAAC,EAAE;UAChCuH,YAAY,CAAC,IAAI,CAAC;QACpB;MACF;MAEA2C,QAAQ,CAACvI,OAAO,GAAG,IAAI;IACzB,CAAC;IAED,IAAIyI,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;MAC/ChK,cAAc,CAAC,KAAK,EAAE,YAAY;QAChC8J,QAAQ,CAACvI,OAAO,GAAG,KAAK;QACxB4F,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;MAEF,IAAI5K,QAAQ,EAAE;QACZ;MACF;MAEA,IAAIsG,iBAAiB,EAAE;QACrB;QACA,IAAIzH,IAAI,KAAK,MAAM,EAAE;UACnBmM,aAAa,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;UAC/BpC,aAAa,CAAC1B,KAAK,CAAC+B,IAAI,CAAC,IAAIpD,GAAG,CAAC,EAAE,CAAC9B,MAAM,CAACzI,kBAAkB,CAACoK,cAAc,CAAC,EAAE,CAACY,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QACxG,CAAC,MAAM,IAAIzH,IAAI,KAAK,UAAU,EAAE;UAC9B;UACAwH,mBAAmB,CAAC,EAAE,CAAC;QACzB;MACF;MAEA,IAAIvE,MAAM,EAAE;QACVA,MAAM,CAACoL,KAAK,CAAC,KAAK,CAAC,EAAEJ,SAAS,CAAC;MACjC;IACF,CAAC;IAED,IAAIY,gBAAgB,GAAG,EAAE;IACzB9R,SAAS,CAAC,YAAY;MACpB,OAAO,YAAY;QACjB8R,gBAAgB,CAAC9K,OAAO,CAAC,UAAU+K,SAAS,EAAE;UAC5C,OAAOC,YAAY,CAACD,SAAS,CAAC;QAChC,CAAC,CAAC;QACFD,gBAAgB,CAACG,MAAM,CAAC,CAAC,EAAEH,gBAAgB,CAAC7F,MAAM,CAAC;MACrD,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;IAEN,IAAIiG,mBAAmB,GAAG,SAASA,mBAAmBA,CAAC1B,KAAK,EAAE;MAC5D,IAAI2B,MAAM,GAAG3B,KAAK,CAAC2B,MAAM;MACzB,IAAIC,YAAY,GAAGjL,UAAU,CAACiC,OAAO,IAAIjC,UAAU,CAACiC,OAAO,CAAC+F,eAAe,CAAC,CAAC,CAAC,CAAC;;MAE/E,IAAIiD,YAAY,IAAIA,YAAY,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;QACjD,IAAIJ,SAAS,GAAGO,UAAU,CAAC,YAAY;UACrC,IAAI7E,KAAK,GAAGqE,gBAAgB,CAACS,OAAO,CAACR,SAAS,CAAC;UAE/C,IAAItE,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBqE,gBAAgB,CAACG,MAAM,CAACxE,KAAK,EAAE,CAAC,CAAC;UACnC;UAEA3F,oBAAoB,CAAC,CAAC;UAEtB,IAAI,CAACc,MAAM,IAAI,CAACwJ,YAAY,CAACC,QAAQ,CAACG,QAAQ,CAACC,aAAa,CAAC,EAAE;YAC7D,IAAIC,qBAAqB;YAEzB,CAACA,qBAAqB,GAAGtL,WAAW,CAACgC,OAAO,MAAM,IAAI,IAAIsJ,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACvJ,KAAK,CAAC,CAAC;UACrI;QACF,CAAC,CAAC;QACF2I,gBAAgB,CAACa,IAAI,CAACZ,SAAS,CAAC;MAClC;MAEA,IAAI1L,WAAW,EAAE;QACf,KAAK,IAAIuM,KAAK,GAAG1B,SAAS,CAACjF,MAAM,EAAE4G,QAAQ,GAAG,IAAIvH,KAAK,CAACsH,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,EAAEE,KAAK,EAAE,EAAE;UACrHD,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,GAAG5B,SAAS,CAAC4B,KAAK,CAAC;QACxC;QAEAzM,WAAW,CAACiL,KAAK,CAAC,KAAK,CAAC,EAAE,CAACd,KAAK,CAAC,CAACrI,MAAM,CAAC0K,QAAQ,CAAC,CAAC;MACrD;IACF,CAAC,CAAC,CAAC;;IAGH,IAAIE,WAAW,GAAGjT,QAAQ,CAAC,CAAC,CAAC;MACzBkT,WAAW,GAAGrT,cAAc,CAACoT,WAAW,EAAE,CAAC,CAAC;MAC5CE,kBAAkB,GAAGD,WAAW,CAAC,CAAC,CAAC;MACnCE,qBAAqB,GAAGF,WAAW,CAAC,CAAC,CAAC;IAE1C,IAAIG,8BAA8B,GAAG7O,wBAAwB,KAAKgE,SAAS,GAAGhE,wBAAwB,GAAGrB,IAAI,KAAK,UAAU;IAE5H,IAAImQ,aAAa,GAAG,SAASA,aAAaA,CAACC,MAAM,EAAE5F,KAAK,EAAE;MACxD,IAAI6F,KAAK,GAAGpC,SAAS,CAACjF,MAAM,GAAG,CAAC,IAAIiF,SAAS,CAAC,CAAC,CAAC,KAAK5I,SAAS,GAAG4I,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9EqC,YAAY,GAAGD,KAAK,CAACjH,MAAM;QAC3BA,MAAM,GAAGkH,YAAY,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,YAAY;MAEhEL,qBAAqB,CAACzF,KAAK,CAAC;MAE5B,IAAI/I,QAAQ,IAAIzB,IAAI,KAAK,UAAU,IAAIoQ,MAAM,KAAK,IAAI,IAAIhH,MAAM,KAAK,UAAU,EAAE;QAC/EhC,cAAc,CAAC+D,MAAM,CAACiF,MAAM,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,CAAC;;IAGH,IAAIG,WAAW,GAAG1T,QAAQ,CAAC,IAAI,CAAC;MAC5B2T,WAAW,GAAG9T,cAAc,CAAC6T,WAAW,EAAE,CAAC,CAAC;MAC5CE,cAAc,GAAGD,WAAW,CAAC,CAAC,CAAC;MAC/BE,iBAAiB,GAAGF,WAAW,CAAC,CAAC,CAAC;IAEtC,IAAIG,WAAW,GAAG9T,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1B+T,WAAW,GAAGlU,cAAc,CAACiU,WAAW,EAAE,CAAC,CAAC;MAC5CE,WAAW,GAAGD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;IAGlC,SAASE,iBAAiBA,CAAA,EAAG;MAC3BD,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB;IAEA9S,eAAe,CAAC,YAAY;MAC1B,IAAI+N,WAAW,EAAE;QACf,IAAIiF,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAChN,YAAY,CAACkC,OAAO,CAAC+K,WAAW,CAAC;QAE1D,IAAIT,cAAc,KAAKM,QAAQ,EAAE;UAC/BL,iBAAiB,CAACK,QAAQ,CAAC;QAC7B;MACF;IACF,CAAC,EAAE,CAACjF,WAAW,CAAC,CAAC;IACjB,IAAIqF,SAAS,GAAG,aAAavU,KAAK,CAACwU,aAAa,CAAC3S,UAAU,EAAE;MAC3Dc,GAAG,EAAE6E,OAAO;MACZ5F,SAAS,EAAEA,SAAS;MACpBmB,EAAE,EAAEwF,QAAQ;MACZvF,IAAI,EAAEgM,UAAU;MAChByF,cAAc,EAAE,CAACvR,OAAO;MACxBA,OAAO,EAAEgI,cAAc;MACvBjJ,cAAc,EAAE2J,qBAAqB;MACrC8I,QAAQ,EAAE/L,UAAU;MACpBwI,MAAM,EAAEhH,SAAS;MACjBwK,MAAM,EAAEzP,UAAU;MAClB0P,UAAU,EAAExP,cAAc;MAC1BsB,QAAQ,EAAE8H,sBAAsB;MAChCW,YAAY,EAAEA,YAAY;MAC1BoE,aAAa,EAAEA,aAAa;MAC5B9O,wBAAwB,EAAE6O,8BAA8B;MACxD3O,eAAe,EAAEA,eAAe;MAChCkQ,QAAQ,EAAE3O,aAAa;MACvBxC,WAAW,EAAEmH,iBAAiB;MAC9BvG,oBAAoB,EAAEA,oBAAoB;MAC1CiB,OAAO,EAAEA,OAAO,KAAK,KAAK,IAAIG,wBAAwB,KAAK,KAAK;MAChEoP,YAAY,EAAEZ;IAChB,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIa,SAAS;IAEb,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;MACjD;MACA,IAAIhO,gBAAgB,IAAIF,aAAa,CAACF,OAAO,EAAE;QAC7CE,aAAa,CAACF,OAAO,CAAC,CAAC;MACzB;MAEA,IAAIA,OAAO,EAAE;QACXA,OAAO,CAAC,CAAC;MACX;MAEAuG,aAAa,CAAC,EAAE,CAAC;MACjBoC,aAAa,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;IACjC,CAAC;IAED,IAAI,CAAChL,QAAQ,IAAIL,UAAU,KAAK+F,cAAc,CAACmC,MAAM,IAAIvB,iBAAiB,CAAC,EAAE;MAC3EkK,SAAS,GAAG,aAAa/U,KAAK,CAACwU,aAAa,CAACxT,QAAQ,EAAE;QACrD8B,SAAS,EAAE,EAAE,CAACwF,MAAM,CAAC1G,SAAS,EAAE,QAAQ,CAAC;QACzC4E,WAAW,EAAEwO,gBAAgB;QAC7BC,aAAa,EAAE9Q;MACjB,CAAC,EAAE,MAAM,CAAC;IACZ,CAAC,CAAC;;IAGF,IAAI+Q,eAAe,GAAG9Q,SAAS,KAAKqE,SAAS,GAAGrE,SAAS,GAAGI,OAAO,IAAI,CAACmE,UAAU,IAAIvF,IAAI,KAAK,UAAU;IACzG,IAAI+R,SAAS;IAEb,IAAID,eAAe,EAAE;MACnBC,SAAS,GAAG,aAAanV,KAAK,CAACwU,aAAa,CAACxT,QAAQ,EAAE;QACrD8B,SAAS,EAAEvC,UAAU,CAAC,EAAE,CAAC+H,MAAM,CAAC1G,SAAS,EAAE,QAAQ,CAAC,EAAEjC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC2I,MAAM,CAAC1G,SAAS,EAAE,gBAAgB,CAAC,EAAE4C,OAAO,CAAC,CAAC;QAC3HyQ,aAAa,EAAE5Q,SAAS;QACxB+Q,kBAAkB,EAAE;UAClB5Q,OAAO,EAAEA,OAAO;UAChBd,WAAW,EAAEmH,iBAAiB;UAC9B7H,IAAI,EAAEgM,UAAU;UAChBqG,OAAO,EAAEtN,WAAW;UACpBvE,UAAU,EAAEoF;QACd;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAGF,IAAI0M,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIlT,YAAY,EAAE;MACzDA,YAAY,CAACI,KAAK,CAAC;IACrB,CAAC,CAAC;;IAGF,IAAI+S,eAAe,GAAGlV,UAAU,CAACqB,SAAS,EAAEkB,SAAS,GAAGF,YAAY,GAAG,CAAC,CAAC,EAAEjD,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,UAAU,CAAC,EAAEmG,WAAW,CAAC,EAAEpI,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,WAAW,CAAC,EAAE+G,UAAU,CAAC,EAAEhJ,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC+G,UAAU,CAAC,EAAEhJ,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,cAAc,CAAC,EAAEsC,UAAU,CAAC,EAAEvE,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,aAAa,CAAC,EAAEsT,eAAe,CAAC,EAAEvV,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,WAAW,CAAC,EAAE2C,QAAQ,CAAC,EAAE5E,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,UAAU,CAAC,EAAE4C,OAAO,CAAC,EAAE7E,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,OAAO,CAAC,EAAEoN,UAAU,CAAC,EAAErP,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,kBAAkB,CAAC,EAAE+M,qBAAqB,CAAC,EAAEhP,eAAe,CAACiD,YAAY,EAAE,EAAE,CAAC0F,MAAM,CAAC1G,SAAS,EAAE,cAAc,CAAC,EAAEgH,gBAAgB,CAAC,EAAEhG,YAAY,CAAC,CAAC;IAC/3B,OAAO,aAAa5C,KAAK,CAACwU,aAAa,CAAC,KAAK,EAAE9U,QAAQ,CAAC;MACtDoD,SAAS,EAAE2S;IACb,CAAC,EAAEvO,QAAQ,EAAE;MACXvE,GAAG,EAAE0E,YAAY;MACjBb,WAAW,EAAE6L,mBAAmB;MAChC9L,SAAS,EAAEmK,iBAAiB;MAC5BpK,OAAO,EAAEoL,eAAe;MACxBtL,OAAO,EAAE2L,gBAAgB;MACzB1L,MAAM,EAAE2L;IACV,CAAC,CAAC,EAAEjK,WAAW,IAAI,CAACiH,UAAU,IAAI,aAAahP,KAAK,CAACwU,aAAa,CAAC,MAAM,EAAE;MACzEkB,KAAK,EAAE;QACLC,KAAK,EAAE,CAAC;QACRhB,MAAM,EAAE,CAAC;QACTiB,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,QAAQ;QAClBC,OAAO,EAAE;MACX,CAAC;MACD,WAAW,EAAE;IACf,CAAC,EAAE,EAAE,CAACxN,MAAM,CAAC2B,cAAc,CAAC8L,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,aAAa/V,KAAK,CAACwU,aAAa,CAAC9T,aAAa,EAAE;MACxFiC,GAAG,EAAE2E,UAAU;MACf/C,QAAQ,EAAEA,QAAQ;MAClB3C,SAAS,EAAEA,SAAS;MACpBoU,OAAO,EAAE9G,WAAW;MACpBqD,YAAY,EAAEgC,SAAS;MACvBV,cAAc,EAAEA,cAAc;MAC9BxO,SAAS,EAAEA,SAAS;MACpBC,cAAc,EAAEA,cAAc;MAC9BE,aAAa,EAAEA,aAAa;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCM,SAAS,EAAEA,SAAS;MACpBL,wBAAwB,EAAEA,wBAAwB;MAClDC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA,aAAa;MAC5BZ,iBAAiB,EAAEA,iBAAiB;MACpCiR,KAAK,EAAE,CAACnL,aAAa,CAACsB,MAAM;MAC5B8J,iBAAiB,EAAE,SAASA,iBAAiBA,CAAA,EAAG;QAC9C,OAAOjN,cAAc,CAACM,OAAO;MAC/B;IACF,CAAC,EAAE,aAAavJ,KAAK,CAACwU,aAAa,CAAC/T,QAAQ,EAAEf,QAAQ,CAAC,CAAC,CAAC,EAAEgD,KAAK,EAAE;MAChEyT,MAAM,EAAElN,cAAc;MACtBrH,SAAS,EAAEA,SAAS;MACpBwU,YAAY,EAAEzH,qBAAqB;MACnChM,GAAG,EAAE4E,WAAW;MAChBxE,EAAE,EAAEwF,QAAQ;MACZ/E,UAAU,EAAEoF,gBAAgB;MAC5BxF,IAAI,EAAEA,IAAI;MACVgQ,kBAAkB,EAAEA,kBAAkB;MACtCsB,QAAQ,EAAE/L,UAAU;MACpB1C,SAAS,EAAEA,SAAS;MACpBkL,MAAM,EAAEtF,aAAa;MACrB7I,IAAI,EAAEgM,UAAU;MAChBG,YAAY,EAAEA,YAAY;MAC1BzL,WAAW,EAAEmH,iBAAiB;MAC9BN,WAAW,EAAEA,WAAW;MACxBtG,QAAQ,EAAEsL,aAAa;MACvBa,cAAc,EAAEA,cAAc;MAC9B1J,QAAQ,EAAEgI,yBAAyB;MACnCjH,cAAc,EAAEA;IAClB,CAAC,CAAC,CAAC,CAAC,EAAE0N,SAAS,EAAEJ,SAAS,CAAC;EAC7B;EAEA,IAAIsB,SAAS,GAAG,aAAarW,KAAK,CAACsW,UAAU,CAAC7T,MAAM,CAAC;EACrD,OAAO4T,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module"}